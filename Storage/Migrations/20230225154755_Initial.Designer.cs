// <auto-generated />
using System;
using ComputerConfigurator.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComputerConfigurator.Storage.Migrations
{
    [DbContext(typeof(AutoDataContext))]
    [Migration("20230225154755_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.AudiocardCitilink", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Interface")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastAccessTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("sysdate(3)");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Sound")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Audiocards");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.CasingCitilink", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AddFans")
                        .HasColumnType("longtext");

                    b.Property<bool>("AudioJack")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BackFans")
                        .HasColumnType("longtext");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("CanWater")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<int>("CoolerHeightMax")
                        .HasColumnType("int");

                    b.Property<int>("CountSection2_5")
                        .HasColumnType("int");

                    b.Property<int>("CountSection3_5")
                        .HasColumnType("int");

                    b.Property<int>("CountSlotsExtension")
                        .HasColumnType("int");

                    b.Property<int>("CountUSB2")
                        .HasColumnType("int");

                    b.Property<int>("CountUSB3")
                        .HasColumnType("int");

                    b.Property<int>("CountUSB31TypeC")
                        .HasColumnType("int");

                    b.Property<string>("FrontFans")
                        .HasColumnType("longtext");

                    b.Property<int>("GraphicCardMaxLenght")
                        .HasColumnType("int");

                    b.Property<int>("IdFormFactor")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastAccessTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("sysdate(3)");

                    b.Property<string>("LocationHdd")
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("PsuCertificate")
                        .HasColumnType("longtext");

                    b.Property<int>("PsuLenghtMax")
                        .HasColumnType("int");

                    b.Property<string>("PsuLocation")
                        .HasColumnType("longtext");

                    b.Property<int>("PsuPower")
                        .HasColumnType("int");

                    b.Property<string>("SidePanel")
                        .HasColumnType("longtext");

                    b.Property<string>("SidePanelMaterial")
                        .HasColumnType("longtext");

                    b.Property<string>("SpecificationSection")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdFormFactor");

                    b.ToTable("Casings");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.CoolerCitilink", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Base")
                        .HasColumnType("longtext");

                    b.Property<string>("BearingType")
                        .HasColumnType("longtext");

                    b.Property<string>("BlowDirection")
                        .HasColumnType("longtext");

                    b.Property<double>("BlowPowerCfm")
                        .HasColumnType("double");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Connector")
                        .HasColumnType("longtext");

                    b.Property<int>("FanCount")
                        .HasColumnType("int");

                    b.Property<int>("FanSize")
                        .HasColumnType("int");

                    b.Property<string>("FanSpeed")
                        .HasColumnType("longtext");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastAccessTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("sysdate(3)");

                    b.Property<int>("Lenght")
                        .HasColumnType("int");

                    b.Property<bool>("Lighting")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<string>("NoiseLevel")
                        .HasColumnType("longtext");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("longtext");

                    b.Property<double>("PowerMax")
                        .HasColumnType("double");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("TdpMax")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("UsePipes")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Coolers");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.CpuCitilink", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Bit")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BusCapacity")
                        .HasColumnType("longtext");

                    b.Property<string>("CoreName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CountOfCores")
                        .HasColumnType("int");

                    b.Property<int>("CountOfThreads")
                        .HasColumnType("int");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("GpuExist")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("GpuFreq")
                        .HasColumnType("longtext");

                    b.Property<int>("GpuMemory")
                        .HasColumnType("int");

                    b.Property<string>("GpuModel")
                        .HasColumnType("longtext");

                    b.Property<int>("Heat")
                        .HasColumnType("int");

                    b.Property<int>("IdSocket")
                        .HasColumnType("int");

                    b.Property<string>("L3cache")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastAccessTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("sysdate(3)");

                    b.Property<int>("MaxTemperature")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<bool>("Multiplier")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Package")
                        .HasColumnType("longtext");

                    b.Property<string>("PciConfiguration")
                        .HasColumnType("longtext");

                    b.Property<int>("PciCountOfChannels")
                        .HasColumnType("int");

                    b.Property<string>("PciVer")
                        .HasColumnType("longtext");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("RamBusCapacity")
                        .HasColumnType("longtext");

                    b.Property<int>("RamCountOfChannels")
                        .HasColumnType("int");

                    b.Property<bool>("RamEccReg")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("RamFreq")
                        .HasColumnType("int");

                    b.Property<int>("RamMax")
                        .HasColumnType("int");

                    b.Property<string>("RamType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TechProc")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdSocket");

                    b.ToTable("Processors");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.GpuCitilink", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChipsetBrand")
                        .HasColumnType("longtext");

                    b.Property<string>("ChipsetModel")
                        .HasColumnType("longtext");

                    b.Property<string>("ConnectorType")
                        .HasColumnType("longtext");

                    b.Property<string>("DirectXOpenGlVer")
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayPortCount")
                        .HasColumnType("int");

                    b.Property<string>("DisplayPortVer")
                        .HasColumnType("longtext");

                    b.Property<string>("DlssSupport")
                        .HasColumnType("longtext");

                    b.Property<int>("DviCount")
                        .HasColumnType("int");

                    b.Property<string>("Frequency")
                        .HasColumnType("longtext");

                    b.Property<int>("HdmiCount")
                        .HasColumnType("int");

                    b.Property<string>("HdmiVer")
                        .HasColumnType("longtext");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Interface")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastAccessTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("sysdate(3)");

                    b.Property<int>("Lenght")
                        .HasColumnType("int");

                    b.Property<int>("MemoryAmount")
                        .HasColumnType("int");

                    b.Property<string>("MemoryBusBit")
                        .HasColumnType("longtext");

                    b.Property<string>("MemoryFreq")
                        .HasColumnType("longtext");

                    b.Property<string>("MemoryType")
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<int>("MonitorCount")
                        .HasColumnType("int");

                    b.Property<string>("NvidiaSupport")
                        .HasColumnType("longtext");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("longtext");

                    b.Property<int>("PowerMax")
                        .HasColumnType("int");

                    b.Property<int>("PowerReccomended")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("RayTracing")
                        .HasColumnType("longtext");

                    b.Property<string>("ResolutionMax")
                        .HasColumnType("longtext");

                    b.Property<int>("TechProc")
                        .HasColumnType("int");

                    b.Property<int>("Thickness")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Width")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("GraphicCards");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.HddCitilink", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BufferCapacity")
                        .HasColumnType("longtext");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("FormFactor")
                        .HasColumnType("longtext");

                    b.Property<string>("IntefaceMaxSpeed")
                        .HasColumnType("longtext");

                    b.Property<string>("IntefaceType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastAccessTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("sysdate(3)");

                    b.Property<int>("Latency")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("longtext");

                    b.Property<double>("PowerMax")
                        .HasColumnType("double");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("SpeedSpin")
                        .HasColumnType("int");

                    b.Property<int>("TimeToFail")
                        .HasColumnType("int");

                    b.Property<string>("TypeHdd")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("HardDisks");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.MotherboardCitilink", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AudioController")
                        .HasColumnType("longtext");

                    b.Property<string>("AudioType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Bluetooth")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChipsetBrand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChipsetModel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayPortCount")
                        .HasColumnType("int");

                    b.Property<int>("HdmiCount")
                        .HasColumnType("int");

                    b.Property<int>("IdFormFactor")
                        .HasColumnType("int");

                    b.Property<int>("IdSocket")
                        .HasColumnType("int");

                    b.Property<bool>("IntelOptane")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastAccessTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("sysdate(3)");

                    b.Property<int>("M2Count")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<string>("NetworkInterface")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PCIe1Count")
                        .HasColumnType("int");

                    b.Property<int>("PCIe2Count")
                        .HasColumnType("int");

                    b.Property<int>("PCIe3Count")
                        .HasColumnType("int");

                    b.Property<int>("PCIe4Count")
                        .HasColumnType("int");

                    b.Property<int>("PCIe5Count")
                        .HasColumnType("int");

                    b.Property<string>("PCIeX16Speed")
                        .HasColumnType("longtext");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("PowerConnector")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("RamAmountMax")
                        .HasColumnType("int");

                    b.Property<int>("RamCountDDR2")
                        .HasColumnType("int");

                    b.Property<int>("RamCountDDR3")
                        .HasColumnType("int");

                    b.Property<int>("RamCountDDR4")
                        .HasColumnType("int");

                    b.Property<int>("RamCountDDR5")
                        .HasColumnType("int");

                    b.Property<string>("RamFrequency")
                        .HasColumnType("longtext");

                    b.Property<int>("RamFrequencyMax")
                        .HasColumnType("int");

                    b.Property<string>("RamMode")
                        .HasColumnType("longtext");

                    b.Property<string>("RamType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Sata2Count")
                        .HasColumnType("int");

                    b.Property<int>("Sata3Count")
                        .HasColumnType("int");

                    b.Property<bool>("SataRaid")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ThunderboltCount")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Usb20Count")
                        .HasColumnType("int");

                    b.Property<int>("Usb30Count")
                        .HasColumnType("int");

                    b.Property<int>("Usb31Count")
                        .HasColumnType("int");

                    b.Property<int>("VgaCount")
                        .HasColumnType("int");

                    b.Property<bool>("Wifi")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdFormFactor");

                    b.HasIndex("IdSocket");

                    b.ToTable("Motherboards");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.PsuCitilink", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AtxVersion")
                        .HasColumnType("longtext");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Certificate")
                        .HasColumnType("longtext");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<string>("FanCount")
                        .HasColumnType("longtext");

                    b.Property<string>("FanSize")
                        .HasColumnType("longtext");

                    b.Property<int>("FddCount")
                        .HasColumnType("int");

                    b.Property<string>("FormFactor")
                        .HasColumnType("longtext");

                    b.Property<string>("GraphicCardConnector")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsModular")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastAccessTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("sysdate(3)");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<int>("MolexCount")
                        .HasColumnType("int");

                    b.Property<string>("MotherboardConnector")
                        .HasColumnType("longtext");

                    b.Property<bool>("Pfc")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("longtext");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("SataCount")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("longtext");

                    b.Property<bool>("ThermalRegulator")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Psu");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.RamCitilink", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("ChannelsCount")
                        .HasColumnType("longtext");

                    b.Property<int>("CountChip")
                        .HasColumnType("int");

                    b.Property<string>("Delay")
                        .HasColumnType("longtext");

                    b.Property<string>("DelayDefault")
                        .HasColumnType("longtext");

                    b.Property<string>("FormFactor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<int>("FrequencyDefault")
                        .HasColumnType("int");

                    b.Property<bool>("IsEcc")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastAccessTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("sysdate(3)");

                    b.Property<string>("Latency")
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<int>("ModulCount")
                        .HasColumnType("int");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("PinCount")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Speed")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Voltage")
                        .HasColumnType("double");

                    b.Property<double>("VoltageDefault")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Ram");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.SocketCooler", b =>
                {
                    b.Property<int>("IdSocket")
                        .HasColumnType("int");

                    b.Property<int>("IdCooler")
                        .HasColumnType("int");

                    b.HasKey("IdSocket", "IdCooler");

                    b.HasIndex("IdCooler");

                    b.ToTable("SocketCooler", (string)null);
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.SsdCitilink", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("FormFactor")
                        .HasColumnType("longtext");

                    b.Property<string>("Inteface")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastAccessTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("sysdate(3)");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<string>("NandType")
                        .HasColumnType("longtext");

                    b.Property<bool>("Nvme")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("longtext");

                    b.Property<double>("PowerMax")
                        .HasColumnType("double");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("SpeedReadMax")
                        .HasColumnType("int");

                    b.Property<int>("SpeedWriteMax")
                        .HasColumnType("int");

                    b.Property<int>("Tbw")
                        .HasColumnType("int");

                    b.Property<int>("TimeToFail")
                        .HasColumnType("int");

                    b.Property<string>("TypeDisk")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SsdDisks");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.ConfigurationCitilink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int?>("AudiocardId")
                        .HasColumnType("int");

                    b.Property<int?>("CasingId")
                        .HasColumnType("int");

                    b.Property<int?>("CoolerId")
                        .HasColumnType("int");

                    b.Property<int?>("GraphicCardId")
                        .HasColumnType("int");

                    b.Property<int?>("HddId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastAccessTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("sysdate(3)");

                    b.Property<int?>("MotherboardId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessorId")
                        .HasColumnType("int");

                    b.Property<int?>("PsuId")
                        .HasColumnType("int");

                    b.Property<int>("RamCount")
                        .HasColumnType("int");

                    b.Property<int?>("RamId")
                        .HasColumnType("int");

                    b.Property<int?>("SsdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AudiocardId");

                    b.HasIndex("CasingId");

                    b.HasIndex("CoolerId");

                    b.HasIndex("GraphicCardId");

                    b.HasIndex("HddId");

                    b.HasIndex("MotherboardId");

                    b.HasIndex("ProcessorId");

                    b.HasIndex("PsuId");

                    b.HasIndex("RamId");

                    b.HasIndex("SsdId");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.NotDetail.MotherboardFormFactor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("FormFactors");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.NotDetail.SocketModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Sockets");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.CasingCitilink", b =>
                {
                    b.HasOne("ComputerConfigurator.Models.NotDetail.MotherboardFormFactor", "FormFactor")
                        .WithMany()
                        .HasForeignKey("IdFormFactor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormFactor");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.CpuCitilink", b =>
                {
                    b.HasOne("ComputerConfigurator.Models.NotDetail.SocketModel", "Socket")
                        .WithMany()
                        .HasForeignKey("IdSocket")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Socket");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.MotherboardCitilink", b =>
                {
                    b.HasOne("ComputerConfigurator.Models.NotDetail.MotherboardFormFactor", "FormFactor")
                        .WithMany()
                        .HasForeignKey("IdFormFactor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputerConfigurator.Models.NotDetail.SocketModel", "Socket")
                        .WithMany()
                        .HasForeignKey("IdSocket")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormFactor");

                    b.Navigation("Socket");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.SocketCooler", b =>
                {
                    b.HasOne("ComputerConfigurator.Models.Citilink.CoolerCitilink", "Cooler")
                        .WithMany("SocketCoolers")
                        .HasForeignKey("IdCooler")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputerConfigurator.Models.NotDetail.SocketModel", "Socket")
                        .WithMany("SocketCoolers")
                        .HasForeignKey("IdSocket")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cooler");

                    b.Navigation("Socket");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.ConfigurationCitilink", b =>
                {
                    b.HasOne("ComputerConfigurator.Models.Citilink.AudiocardCitilink", "Audiocard")
                        .WithMany("Configurations")
                        .HasForeignKey("AudiocardId");

                    b.HasOne("ComputerConfigurator.Models.Citilink.CasingCitilink", "Casing")
                        .WithMany("Configurations")
                        .HasForeignKey("CasingId");

                    b.HasOne("ComputerConfigurator.Models.Citilink.CoolerCitilink", "Cooler")
                        .WithMany("Configurations")
                        .HasForeignKey("CoolerId");

                    b.HasOne("ComputerConfigurator.Models.Citilink.GpuCitilink", "GraphicCard")
                        .WithMany("Configurations")
                        .HasForeignKey("GraphicCardId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ComputerConfigurator.Models.Citilink.HddCitilink", "Hdd")
                        .WithMany("Configurations")
                        .HasForeignKey("HddId");

                    b.HasOne("ComputerConfigurator.Models.Citilink.MotherboardCitilink", "Motherboard")
                        .WithMany("Configurations")
                        .HasForeignKey("MotherboardId");

                    b.HasOne("ComputerConfigurator.Models.Citilink.CpuCitilink", "Processor")
                        .WithMany("Configurations")
                        .HasForeignKey("ProcessorId");

                    b.HasOne("ComputerConfigurator.Models.Citilink.PsuCitilink", "Psu")
                        .WithMany("Configurations")
                        .HasForeignKey("PsuId");

                    b.HasOne("ComputerConfigurator.Models.Citilink.RamCitilink", "Ram")
                        .WithMany("Configurations")
                        .HasForeignKey("RamId");

                    b.HasOne("ComputerConfigurator.Models.Citilink.SsdCitilink", "Ssd")
                        .WithMany("Configurations")
                        .HasForeignKey("SsdId");

                    b.Navigation("Audiocard");

                    b.Navigation("Casing");

                    b.Navigation("Cooler");

                    b.Navigation("GraphicCard");

                    b.Navigation("Hdd");

                    b.Navigation("Motherboard");

                    b.Navigation("Processor");

                    b.Navigation("Psu");

                    b.Navigation("Ram");

                    b.Navigation("Ssd");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.AudiocardCitilink", b =>
                {
                    b.Navigation("Configurations");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.CasingCitilink", b =>
                {
                    b.Navigation("Configurations");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.CoolerCitilink", b =>
                {
                    b.Navigation("Configurations");

                    b.Navigation("SocketCoolers");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.CpuCitilink", b =>
                {
                    b.Navigation("Configurations");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.GpuCitilink", b =>
                {
                    b.Navigation("Configurations");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.HddCitilink", b =>
                {
                    b.Navigation("Configurations");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.MotherboardCitilink", b =>
                {
                    b.Navigation("Configurations");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.PsuCitilink", b =>
                {
                    b.Navigation("Configurations");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.RamCitilink", b =>
                {
                    b.Navigation("Configurations");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.Citilink.SsdCitilink", b =>
                {
                    b.Navigation("Configurations");
                });

            modelBuilder.Entity("ComputerConfigurator.Models.NotDetail.SocketModel", b =>
                {
                    b.Navigation("SocketCoolers");
                });
#pragma warning restore 612, 618
        }
    }
}
